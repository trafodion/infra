<?php
    header('Pragma: no-cache, no-store');
    header('Cache-Control: no-store, no-cache, must-revalidate');
    header('Cache-Control: post-check=0, pre-check=0', false);
    header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
    header("Expires: " . gmdate("D, d M Y H:i:s") . " GMT");
?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>Trafodion (Pre-Apache) Downloads</title>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />

    <script type="text/javascript" src="http://traf-builds.esgyn.com/common.js"></script>

    <!-- Google Fonts -->
    <link href="http://fonts.googleapis.com/css?family=PT+Sans&amp;subset=latin" rel="stylesheet" type="text/css" />
    <!-- Framework CSS -->
    <link rel="stylesheet" href="http://traf-builds.esgyn.com/themes/trafodion/css/blueprint/screen.css" type="text/css" media="screen, projection" />
    <link rel="stylesheet" href="http://traf-builds.esgyn.com/themes/trafodion/css/blueprint/print.css" type="text/css" media="print" />
    <!-- IE CSS -->
    <!--[if lt IE 8]><link rel="stylesheet" href="http://traf-builds.esgyn.com/themes/trafodion/css/blueprint/ie.css" type="text/css" media="screen, projection" /><![endif]-->
    <!-- Page Specific CSS -->
    <link rel="stylesheet" type="text/css" href="http://traf-builds.esgyn.com/themes/trafodion/css/main.css" />
    <style type="text/css">
        a, a:link {
            color: #204A87;
        }
        li.empty {
            list-style-type: none;
        }
    </style>
  </head>
  <body>
    <script type="text/javascript">header('Downloads');</script>
    <div class="container">
    <h1>Trafodion Project Downloads</h1>
    <div id="message-container">
        <div class="container">
            <div>
                <p id="message">
		These binaries are provided solely for use of the development community working on 
		Apache Trafodion (Incubating) project. These binaries are for convenience only and are
		not certified by the ASF.
                </p>
            </div>
        </div>
    </div>
    <?php
        /**
         * Callback function to match release items
         *
         * @param string $var   Path to file.
         */
        function release($var) {
            if (substr($var, 0, strlen("release/")) === "release/") {
                return true;
            }
        }

        /**
         * Callback function to match old-release items
         *
         * @param string $var   Path to file.
         */
        function oldrelease($var) {
            if (substr($var, 0, strlen("old-release/")) === "old-release/") {
                return true;
            }
        }

        /**
         * Callback function to match pre-release items
         *
         * @param string $var   Path to file.
         */
        function prerelease($var) {
            if (substr($var, 0, strlen("pre-release/")) === "pre-release/") {
                return true;
            }
        }

        /**
         * Callback function to match daily items
         *
         * @param string $var   Path to file.
         */
        function daily($var) {
            if (substr($var, 0, strlen("daily/")) === "daily/") {
                return true;
            }
        }

        /**
         * Callback function to match opencart items
         *
         * @param string $var   Path to file.
         */
        function opencart($var) {
            if (substr($var, 0, strlen("opencart/")) === "opencart/") {
                return true;
            }
        }

        /**
         * Callback function to match sandbox items
         *
         * @param string $var   Path to file.
         */
        function sandbox($var) {
            if (substr($var, 0, strlen("sandbox/")) === "sandbox/") {
                return true;
            }
        }

        /**
         * Callback function to print links to files.
         *
         * @param string $item   The absolute path to a file or empty for blank line
         * @param string $key    Array key. Inferred usage via array_walk.
         * @param string $rType  Release type. Should match the subdirectory name under 
         *                       the trafodion/publish subdirectory. If rType is equal 
         *                       to "empty_list" then an empty list will be printed 
         *                       instead of a list of files.
         */ 
        function print_links($item, $key, $rType) {
            if ($rType != "empty_list") {
                $shortFname = basename($item);
                $fName = $item;
                if ($fName != "empty") {
#                    echo '<li><a class="postlink" href="#" target="_blank" data-f="' . $fName . '">' . $shortFname . '</a></li>' . PHP_EOL;
                    echo '<li><a href="' . $fName . '">' . $shortFname . '</a></li>' . PHP_EOL;
                } else {
                    echo '<li class="empty">&nbsp;</li>' . PHP_EOL;
                }
            } else {
                echo '<li class="empty">&nbsp;</li>' . PHP_EOL;
            }
        }


        #
        # main
        #

#        $scriptPath = __DIR__;

        # include HTTPFUL PHP REST Library
#        include ($scriptPath . '/lib/httpful.phar');


        # generate JSON for fetching getting authentication token
#        $tokenJson =  '{"auth":{"identity":{"methods":["password"],"password":{"user":{"name":"' . $swiftUser 
#                      . '","password":"' . $swiftPassword . '"}}},"scope":{"project":{"id":"' . $projectId . '"}}}}';

        # get authentication token
#        $tokenResponse = \Httpful\Request::post($tokenURI)
#                         ->sendsJson()
#                         ->body($tokenJson)
#                         ->send();
#        $token = $tokenResponse->headers['x-subject-token'];

        # override default JSON handler with one that encodes the results as an array
        # this will apply to all new requests
#        \Httpful\Httpful::register(\Httpful\Mime::JSON, new \Httpful\Handlers\JsonHandler(array('decode_as_array' => true)));

        # get list of all files in trafcdn
#        $releaseResponse = \Httpful\Request::get($getSwiftURI)
#                           ->expectsJson()
#                           ->addHeader('X-Auth-Token', $token)
#                           ->send();

        # parse releaseResponse into an array but exclude all directories like opencart, release, etc.
#        $tCdnArray = array();
#        foreach ($releaseResponse->body as $releaseItem) {
#            if (preg_match('/^.*\.[^\W_]{2,}$/', $releaseItem['name'])) {
#                $tCdnArray[] = $releaseItem['name'];
#            }
#        }

        # natural sort the generated array then reverse it
#        natsort($tCdnArray);
#        $cdnArray = array_reverse($tCdnArray);

        # Walk local dir
        function find_all_files($dir) {
            $root = scandir($dir);
            foreach($root as $value) {
                if($value === '.' || $value === '..') {continue;}
                if(is_file("$dir/$value")) {$result[]="$dir/$value";continue;}
                foreach(find_all_files("$dir/$value") as $value) {
                    $result[]=$value;
                }
            }
            return $result;
        }


        echo '<div>' . PHP_EOL;
        echo '    <h2 class="subhead">Apache (Incubating) Releases - Convenience Binaries</h2>' . PHP_EOL;
        echo '    <p><ul>' . PHP_EOL;
        echo '    <li>Stay tuned - 1.3.0 coming soon.</li>' . PHP_EOL;
        echo '    </ul></p>' . PHP_EOL;
        echo '</div>' . PHP_EOL;

        # releases
        echo '<div>' . PHP_EOL;
        echo '    <h2 class="subhead">Latest (Pre-Apache) Release</h2>' . PHP_EOL;
        echo '    <p><ul>' . PHP_EOL;
        echo '<li><a href="https://s3-us-west-2.amazonaws.com/trafodion.release/1.1.0/clients-1.1.0.tar.gz">clients-1.1.0.tar.gz</a></li>' . PHP_EOL;
        echo '<li><a href="https://s3-us-west-2.amazonaws.com/trafodion.release/1.1.0/trafodion-1.1.0.tar.gz">trafodion-1.1.0.tar.gz</a></li>' . PHP_EOL;
        echo '    </ul></p>' . PHP_EOL;
        echo '</div>' . PHP_EOL;

#        # Create array for previous releases
#        # If oldreleaseArray is empty print empty links using releaseArray which comes right before it.
#        # If oldreleaseArray is smaller than releaseArray then pad oldreleaseArray before printing. 
#        # NOTE: Printing empty links preserves the layout of the page.
#        echo '<div class="span-8">' . PHP_EOL;
#        echo '    <h2 class="subhead">Previous Releases</h2>' . PHP_EOL;
#        echo '    <ul>' . PHP_EOL;
#        $oldreleaseArray = array_filter($cdnArray, "oldrelease");
#        if (sizeof($oldreleaseArray) === 0) {
#            array_walk($releaseArray, 'print_links', 'empty_list');
#        } else if (sizeof($oldreleaseArray) >= sizeof($releaseArray)) {
#            array_walk($oldreleaseArray, 'print_links', 'old-release');
#        } else {
#            # pad prereleaseArray to size of releaseArray
#            $arraySizeDiff = sizeof($releaseArray) - sizeof($oldreleaseArray);
#            for ($i = 1; $i <= $arraySizeDiff; $i++) {
#                $oldreleaseArray[] = 'empty';
#            }
#            array_walk($oldreleaseArray, 'print_links', 'old-release');
#        }
#        echo '    </ul>' . PHP_EOL;
#        echo '</div>' . PHP_EOL;

#        # Create array for OpenCart
#        echo '<div class="span-8 last">' . PHP_EOL;
#        echo '    <h2 class="subhead">OpenCart Demo</h2>' . PHP_EOL;
#        echo '    <ul>' . PHP_EOL;
#        $opencartArray = array_filter($cdnArray, "opencart");
#        array_walk($opencartArray, 'print_links', 'opencart');
#        echo '    </ul>' . PHP_EOL;
#        echo '</div>' . PHP_EOL;

#        # Create array for Sandbox
#        /* Commented out array portion of the code until we figure out how to 
#           download a segmented Swfit file from the CDN without using the Swift CLI
#        */
#        echo '<div class="span-8 last">' . PHP_EOL;
#        echo '    <h2 class="subhead">Sandbox</h2>' . PHP_EOL;
#        echo '    <ul>' . PHP_EOL;
#        /*
#        $sandboxArray = array_filter($cdnArray, "sandbox");
#        array_walk($sandboxArray, 'print_links', 'sandbox');
#        */
#        echo '        <li><a href="http://traf-builds.esgyn.com/trafodion_release.ova" target="_blank">trafodion_release.ova</a></li>' . PHP_EOL;
#        echo '    </ul>' . PHP_EOL;
#        echo '</div>' . PHP_EOL;

        # Create array for pre-release
        echo '<div>' . PHP_EOL;
        echo '    <h2 class="subhead">Pre-Release Candidates</h2>' . PHP_EOL;
        echo '    <ul>' . PHP_EOL;
#        $prereleaseArray = array_filter($cdnArray, "prerelease");
        #if (sizeof($prereleaseArray) === 0) {
        #    array_walk($oldreleaseArray, 'print_links', 'empty_list');
        #} else if (sizeof($prereleaseArray) >= sizeof($oldreleaseArray)) {
#            array_walk($prereleaseArray, 'print_links', 'pre-release');
        #} else {
        #    # pad prereleaseArray to size of oldreleaseArray
        #    $arraySizeDiff = sizeof($oldreleaseArray) - sizeof($prereleaseArray);
        #    for ($i = 1; $i <= $arraySizeDiff; $i++) {
        #        $prereleaseArray[] = 'empty';
        #    }
        #    array_walk($prereleaseArray, 'print_links', 'pre-release');
        #}
        echo '    </ul>' . PHP_EOL;
        echo '</div>' . PHP_EOL;

        # Create array for daily
        echo '<div>' . PHP_EOL;
        echo '    <h2 class="subhead">Daily (For Testing Use Only)</h2>' . PHP_EOL;
        echo '    <ul>' . PHP_EOL;
#        $dailyArray = array_filter($cdnArray, "daily");
        $dailyArray = find_all_files("downloads/trafodion/publish/daily");
        array_walk($dailyArray, 'print_links', 'daily');
        echo '    </ul>' . PHP_EOL;
        echo '</div>' . PHP_EOL;

    ?>
    </div> <!-- End div class"container" -->
    <script type="text/javascript">footer();</script>
  </body>
</html>
