#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# (C) Copyright 2014-2015 Hewlett-Packard Development Company, L.P.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# @@@ END COPYRIGHT @@@

source "/usr/local/bin/traf-functions.sh"
log_banner

export TRAF_DIR="$1"                   # location of trafodion/core
export DCS_INSTALL_DIR="$2"            # location of trafodion/dcs
export JAVA_HOME="$3"                  # Java SDK Home Directory
export TEST_DIR="$4"                   # location of trafodion/phoenix_test
export TEST_JDBC_TYPE="$5"             # JDBC type T4 or T2
export TEST_HADOOP_DISTRO="$6"         # Hadoop Distro being tested 
                                       # (CDH51 or CM51 for Cloudera 5.1.x OR
                                       # HDP21 for Hortonworks 2.1.x)
export PATH=$JAVA_HOME/bin:$PATH       # add $JAVA_HOME/bin to the path

# check number of parameters
# if more than 4 parameters then we are also passing in tests to run
# NOTE: tests should be delimited by a comma with no space.  i.e. AlterTableTest,ArithmeticQueryTest
if [ $# -gt 6 ]; then
  shift 6
  TESTS="$*"
elif [ $# -lt 6 ]; then
  echo "ERROR: Incorrect number of input parameters."
  exit 1
fi

set -x

# check TEST_HADOOP_DISTRO input to make sure it's valid

# remove all dots and change to upper case
TEST_HADOOP_DISTRO=$(echo ${TEST_HADOOP_DISTRO//\./} | tr '[a-z]' '[A-Z]')
if [[ $TEST_HADOOP_DISTRO == CDH51* ]] || [[ $TEST_HADOOP_DISTRO == CM51* ]]; then
    TEST_HADOOP_DISTRO="CDH51"
elif [[ $TEST_HADOOP_DISTRO == HDP21* || $TEST_HADOOP_DISTRO == AHW21* ]]; then
    TEST_HADOOP_DISTRO="HDP21"
else
    echo "ERROR: Unknown Hadoop Distro $TEST_HADOOP_DISTRO."
    exit 1
fi

# start trafodion
cd $WORKSPACE
ulimit -c unlimited
/usr/local/bin/install-traf.sh "$TRAF_DIR" "$DCS_INSTALL_DIR" "6" "installdrivers" || exit 1

# source in InstallEnv.sh
source $WORKSPACE/InstallEnv.sh

# check TEST_JDBC_TYPE and set TEST_JDBC_FILE based on it
TEST_JDBC_TYPE=$(echo $TEST_JDBC_TYPE | tr "[:lower:]" "[:upper:]")
if [ "$TEST_JDBC_TYPE" = "T4" ]; then
  TEST_JDBC_FILE="$WORKSPACE/clients/jdbc/lib/jdbcT4.jar"
elif [ "$TEST_JDBC_TYPE" = "T2" ]; then
  TEST_JDBC_FILE="$ILOC/export/lib/jdbcT2.jar"
  if [ $(grep -c 'sqenvd.sh' "$WORKSPACE/$TRAF_DIR/sqf/BuildFlavor") -eq 1 ]; then export SQ_MBTYPE=64d; else export SQ_MBTYPE=64; fi
  export LANG=en_US.UTF-8
  export SQL_NO_REGISTER_CANCEL=1
  export HADOOP_CNF_DIR="/etc/hadoop/conf"
  export HBASE_CNF_DIR="/etc/hbase/conf"
  export HIVE_CNF_DIR="/etc/hive/conf"
  export MY_SQROOT="$ILOC"
  export MPI_TMPDIR="$ILOC/tmp"
  export TMP_LD_PRELOAD="$JAVA_HOME/jre/lib/amd64/libjsig.so:$ILOC/export/lib${SQ_MBTYPE}/libseabasesig.so"
  export LD_LIBRARY_PATH="$ILOC/export/lib${SQ_MBTYPE}:$JAVA_HOME/jre/lib/amd64/server"
  export PATH="$JAVA_HOME/bin:$ILOC/export/bin${SQ_MBTYPE}:$PATH"
else
  echo "ERROR: $TEST_JDBC_TYPE is not a valid JDBC type."
  echo "       T4 and T2 are the only valid JDBC types"
  exit 1
fi

# run phoenix_test
log_banner "phoenix_test.py"


if [ "$TESTS" = "DONT_RUN_TESTS" ]; then
  echo "INFO: Will NOT run any phoenix tests as requested. You should not see this message in the normal Jenkins job phoenix_test! This should only be used to turn off testing of the experimetal jobs."
  phoenixRes=0
else
  TARGS="--target=localhost:37800 --user=<%= jenkins_test_user %> --pw=<%= jenkins_test_password %>"
  TARGS+=" --targettype=TR --javahome=$JAVA_HOME"
  TARGS+=" --jdbccp=$TEST_JDBC_FILE --jdbctype=$TEST_JDBC_TYPE --hadoop=$TEST_HADOOP_DISTRO"
  if [ -n "$TESTS" ]; then
    TARGS+=" --tests=$TESTS"
  fi
  # T2 must run as same user running the instance
  if [[ $TEST_JDBC_TYPE == "T2" ]] && id trafodion >/dev/null 2>&1
  then
    sudo -n -u trafodion rm -rf $WORKSPACE/phx_test_run
    chmod 777 $WORKSPACE   # give write permission to trafodion
    sudo -n -u trafodion cp -R $WORKSPACE/$TEST_DIR $WORKSPACE/phx_test_run
    cd $WORKSPACE/phx_test_run

    chmod -R +rX $WORKSPACE/$TRAF_DIR $WORKSPACE/$DCS_INSTALL_DIR  # read perm for traf/dcs libs, etc
    sudo -n -u trafodion SQ_MBTYPE=$SQ_MBTYPE LANG=$LANG HADOOP_CNF_DIR=$HADOOP_CNF_DIR \
		HBASE_CNF_DIR=$HBASE_CNF_DIR HIVE_CNF_DIR=$HIVE_CNF_DIR MY_SQROOT=$MY_SQROOT \
		MPI_TMPDIR=$MPI_TMPDIR LD_PRELOAD=$TMP_LD_PRELOAD LD_LIBRARY_PATH=$LD_LIBRARY_PATH PATH=$PATH \
		SQL_NO_REGISTER_CANCEL=$SQL_NO_REGISTER_CANCEL \
    		./phoenix_test.py $TARGS
    phoenixRes=$?
  else
    rm -rf $WORKSPACE/phx_test_run
    cp -R $WORKSPACE/$TEST_DIR $WORKSPACE/phx_test_run
    cd $WORKSPACE/phx_test_run
    export LD_PRELOAD=$TMP_LD_PRELOAD
    ./phoenix_test.py $TARGS
    phoenixRes=$?
  fi
fi
cat $WORKSPACE/phx_test_run/target/surefire-reports/*.txt > $WORKSPACE/test_summary.txt

cd $WORKSPACE
/usr/local/bin/uninstall-traf.sh "$TRAF_DIR/sqf"

# Report on parent directory of $TRAF_DIR
# Any core files means failure
source_env test
report_on_corefiles "${WORKSPACE}"
coreCount=$?
if [[ $coreCount -gt 0 ]]; then
  echo
  echo "ERROR : Found $coreCount core files"
  echo
fi

phoenixRes=$(( phoenixRes + coreCount ))

# exit with sum of return codes from phoenix_test.py and report_on_corefiles
exit $phoenixRes
